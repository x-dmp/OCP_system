package cn.edu.cuit.service.impl;

import cn.edu.cuit.dao.OperAccountDAO;
import cn.edu.cuit.model.bo.PageResult;
import cn.edu.cuit.model.bo.Response;
import cn.edu.cuit.model.entity.OperAccount;
import cn.edu.cuit.service.IUserService;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.CollectionUtils;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@Service
public class UserServiceImp implements IUserService {
    /**
     * @description: Service Operation
     * @author: zaoweiceng
     * @time: 2020/12/25 15:52
     */

    @Autowired
    private OperAccountDAO operAccountDAO;

    @Override
    public Response operAccountLogin(String operUserName, String operPassWord) {
        String msg = "用户名或密码错误";
        String code = "404";
        try {
            List<OperAccount> accountList = operAccountDAO.findAccountByAccountName(operUserName);
            if (accountList.size() > 0 && accountList.get(0).getOperPassWord().trim().equals(operPassWord)){
                code = "200";
                msg = "登录成功";
            }
        } catch (Exception e) {}
        Response res = new Response(null, code, msg);
        return res;
    }

    public Response operAccountFind(OperAccount operAccount, Integer pagenum, Integer pagesize) {

        String msg = "查询失败";
        String code = "404";
        Object data = null;
        PageInfo<OperAccount> pageInfo = null;
        List<OperAccount> accountList = null;

        PageHelper.startPage(pagenum, pagesize);
        try {
            accountList = operAccountDAO.findAccountByPage(operAccount.getOperUserName(), operAccount.getOperState(), operAccount.getRoleDepartment(), operAccount.getOperRealName(), operAccount.getOperTeleNumber(), operAccount.getOperSex());
            pageInfo = new PageInfo<>(accountList);
        }catch(Exception e){}
        PageResult pageResult = new PageResult<OperAccount>(pageInfo.getTotal(), pageInfo.getList());
        if (CollectionUtils.isEmpty(pageResult.getItems())) {
            msg = "没有数据";
            code = "404";
        }
        else{
            msg = "获取成功";
            code = "200";
            data = pageResult;
        }
        Response res = new Response(data, code, msg);
        return res;
    }

    @Override
    public Response operAccountInsert(OperAccount operAccount) {
        String msg = "创建账户成功";
        String code = "201";
        Response res;
        try {
            operAccountDAO.insertIntoAccount(operAccount);
        } catch (Exception e) {
            msg = "创建账户失败";
            code = "403";
        } finally {
            res = new Response(null, code, msg);
        }
        return res;
    }

    @Override
    public Response operAccountChange(OperAccount operAccount){
        String msg = "创建账户成功";
        String code = "201";

        Response res = new Response(null, code, msg);
        return res;
    }

    @Override
    public Response operAccountExist(String operUserName) {
        String msg = "不可用";
        String code = "404";
        try {
            List<OperAccount> accountList = operAccountDAO.findAccountByAccountName(operUserName);
            if (accountList.size() == 0){
                msg = "可用";
                code = "200";
            }
        } catch (Exception e) {}
        Response res = new Response(null, code, msg);
        return res;
    }
}
