package cn.edu.cuit.controller;

import cn.edu.cuit.model.bo.PageResult;
import cn.edu.cuit.model.entity.OperAccount;
import cn.edu.cuit.model.bo.Response;
import cn.edu.cuit.model.entity.OperAccount;
import cn.edu.cuit.service.IUserService;
import org.apache.commons.beanutils.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.lang.reflect.InvocationTargetException;
import java.util.Map;

@Controller
@CrossOrigin
@RequestMapping("/users/")
public class OperAccountController {

    @Autowired
    private IUserService userServie;

    @RequestMapping(value = "login", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountLogin(@RequestBody Map<String, Object> data){
        String operUserName = (String) data.get("operUserName");
        String operPassWord = (String) data.get("operPassWord");
        return userServie.operAccountLogin(operUserName, operPassWord);
    }

    @RequestMapping(value = "chkname", method = RequestMethod.POST)
    public @ResponseBody Response accountExist(String name){
        return userServie.operAccountExist(name);
    }

    @RequestMapping(value = "insert", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountInsert(@RequestBody Map<String, Object> data){
        OperAccount operAccount = new OperAccount();
        try {
            BeanUtils.populate(operAccount, data);
        } catch (Exception e) {
        }
        return userServie.operAccountInsert(operAccount);
    }

    @RequestMapping(value = "", method = RequestMethod.GET, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountFind(@RequestBody Map<String, Object> data){
        Integer pagenum=1;
        Integer pagesize=5;

        String operUserName = (String) data.get("operUserName");
        Integer operState = (Integer) data.get("operState");
        String roleDepartment = (String) data.get("roleDepartment");
        String operRealName = (String) data.get("operRealName");
        String operTeleNumber = (String) data.get("operTeleNumber");
        Integer operSex = (Integer) data.get("operSex");

        return this.userServie.operAccountFind(operUserName, operState, roleDepartment, operRealName, operTeleNumber, operSex, pagenum, pagesize);
    }
}
