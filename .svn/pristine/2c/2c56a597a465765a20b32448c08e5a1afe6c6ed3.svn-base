package cn.edu.cuit.controller;

import cn.edu.cuit.model.bo.PageResult;
import cn.edu.cuit.model.entity.OperAccount;
import cn.edu.cuit.model.bo.Response;
import cn.edu.cuit.model.entity.OperAccount;
import cn.edu.cuit.service.IUserService;
import org.apache.commons.beanutils.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import com.google.gson.*;
import java.lang.reflect.InvocationTargetException;
import java.util.Map;

@Controller
@CrossOrigin
@RequestMapping("/users/")
public class OperAccountController {
/**
 * @description: Account Operation
 * @author: zaoweiceng
 * @time: 2020/12/25 15:51
 */
    @Autowired
    private IUserService userServie;
    //用户登录
    @RequestMapping(value = "login", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountLogin(@RequestBody Map<String, Object> data){
        String operUserName = (String) data.get("operUserName");
        String operPassWord = (String) data.get("operPassWord");
        return userServie.operAccountLogin(operUserName, operPassWord);
    }
    //查找是否存在
    @RequestMapping(value = "chkname", method = RequestMethod.POST)
    public @ResponseBody Response accountExist(String name){
        return userServie.operAccountExist(name);
    }
    //用户新增
    @RequestMapping(value = "insert", method = RequestMethod.PUT, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountInsert(@RequestBody Map<String, Object> data){
        Gson gson = new Gson();
        OperAccount operAccount= gson.fromJson((JsonElement) data.get("account"), OperAccount.class);
        return userServie.operAccountInsert(operAccount);
    }
    //用户修改
    @RequestMapping(value = "status", method = RequestMethod.PATCH, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountChange(@RequestBody Map<String, Object> data){
        Gson gson = new Gson();
        OperAccount operAccount= gson.fromJson((JsonElement) data.get("account"), OperAccount.class);

        return userServie.operAccountChange(operAccount);
    }
    //用户按条件分页查询
    @RequestMapping(value = "query", method = RequestMethod.GET, produces = "application/json;charset=UTF-8")
    public @ResponseBody Response accountFind(@RequestBody Map<String, Object> data){
        Integer pagenum = (Integer) data.get("page");
        Integer pagesize = (Integer) data.get("size");
        Gson gson = new Gson();
        OperAccount operAccount= gson.fromJson((JsonElement) data.get("account"), OperAccount.class);

        return this.userServie.operAccountFind(operAccount, pagenum, pagesize);
    }
}
